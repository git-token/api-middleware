'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _web = require('web3');

var _web2 = _interopRequireDefault(_web);

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _KeystoreGenerator2 = require('./KeystoreGenerator');

var _KeystoreGenerator3 = _interopRequireDefault(_KeystoreGenerator2);

var _index = require('./analytics/index');

var _index2 = _interopRequireDefault(_index);

var _configure = require('./analytics/configure');

var _configure2 = _interopRequireDefault(_configure);

var _index3 = require('./smtp/index');

var _index4 = require('./websocket/index');

var _index5 = require('./utils/index');

var _index6 = require('./api/index');

var _index7 = _interopRequireDefault(_index6);

var _index8 = require('./hyperlog/index');

var _index9 = require('./events/index');

var _index10 = require('./contract/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var GitTokenContract = '{\n  "contract_name": "GitToken",\n  "abi": [\n    {\n      "constant": false,\n      "inputs": [],\n      "name": "name",\n      "outputs": [\n        {\n          "name": "_name",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_spender",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "approve",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "totalSupply",\n      "outputs": [\n        {\n          "name": "_supply",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getContributorAddress",\n      "outputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_from",\n          "type": "address"\n        },\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transferFrom",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [],\n      "name": "organization",\n      "outputs": [\n        {\n          "name": "_organization",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "decimals",\n      "outputs": [\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "name": "getContributorUsername",\n      "outputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "setRewardValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "",\n          "type": "address"\n        }\n      ],\n      "name": "owner",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_holder",\n          "type": "address"\n        }\n      ],\n      "name": "balanceOf",\n      "outputs": [\n        {\n          "name": "_balance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getUnclaimedRewards",\n      "outputs": [\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        }\n      ],\n      "name": "getRewardDetails",\n      "outputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [],\n      "name": "symbol",\n      "outputs": [\n        {\n          "name": "_symbol",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transfer",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        }\n      ],\n      "name": "setReservedValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "verifyContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_owner",\n          "type": "address"\n        },\n        {\n          "name": "_spender",\n          "type": "address"\n        }\n      ],\n      "name": "allowance",\n      "outputs": [\n        {\n          "name": "_allowance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        },\n        {\n          "name": "_rewardBonus",\n          "type": "uint256"\n        },\n        {\n          "name": "_deliveryID",\n          "type": "string"\n        }\n      ],\n      "name": "rewardContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "newOwner",\n          "type": "address"\n        }\n      ],\n      "name": "transferOwnership",\n      "outputs": [],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_name",\n          "type": "string"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_organization",\n          "type": "string"\n        },\n        {\n          "name": "_symbol",\n          "type": "string"\n        },\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "constructor"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "owner",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "spender",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Approval",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "from",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "to",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Transfer",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "reservedValue",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "Contribution",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "ContributorVerified",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "reservedType",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "RewardValueSet",\n      "type": "event"\n    }\n  ],\n  "unlinked_binary": "",\n  "networks": {\n    "17": {\n      "links": {},\n      "events": {\n        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Approval",\n          "type": "event"\n        },\n        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Transfer",\n          "type": "event"\n        },\n        "0x270e8b0620bd7a85855d0ae9401e7fa30ea6319fbf06c05f38cad80875f1cc01": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "reservedValue",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            }\n          ],\n          "name": "Contribution",\n          "type": "event"\n        },\n        "0xce96c271d8db9db4a90e538f30d7ec5a63f116893c4636688d9ce1502b5cc936": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "ContributorVerified",\n          "type": "event"\n        },\n        "0xbab878453bea46cf2222f6dd20b3fa8d80dc6ca2b5d4f854173f07227a21e1a6": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "reservedType",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "RewardValueSet",\n          "type": "event"\n        }\n      },\n      "updated_at": 1501865410534\n    }\n  },\n  "schema_version": "0.0.5",\n  "updated_at": 1501865410534\n}';
// import gittokenSQLite from './sqlite/index'

var GitTokenMiddleware = function (_KeystoreGenerator) {
  (0, _inherits3.default)(GitTokenMiddleware, _KeystoreGenerator);

  function GitTokenMiddleware(options) {
    (0, _classCallCheck3.default)(this, GitTokenMiddleware);

    var _this

    // bind utility methods to class scope


    /**
     * TODO Replace this with database
     */
    = (0, _possibleConstructorReturn3.default)(this, (GitTokenMiddleware.__proto__ || (0, _getPrototypeOf2.default)(GitTokenMiddleware)).call(this, options));

    var isGitHubHook = options.isGitHubHook,
        config = options.config,
        web3Provider = options.web3Provider,
        dirPath = options.dirPath,
        contractFile = options.contractFile,
        faucetActive = options.faucetActive,
        mysqlOpts = options.mysqlOpts;


    _this.mysqlOpts = mysqlOpts;
    _this.faucetActive = faucetActive;
    _this.dirPath = dirPath;
    _this.contractFile = contractFile;
    _this.gittokenContract = JSON.parse(GitTokenContract);
    _this.isGitHubHook = isGitHubHook;
    _this.config = config;

    // this.dirPath = dirPath
    // this.web3Provider = web3Provider
    // this.web3 = new Web3(new Web3.providers.HttpProvider(web3Provider))
    // this.eth = promisifyAll(this.web3.eth)
    // this.smtpHandleAuth = smtpHandleAuth.bind(this)
    // this.smtpServer = smtpServer.bind(this)
    // this.smtpServer({
    //   onAuth: this.smtpHandleAuth
    // })


    // this.gittokenSQLite = gittokenSQLite.bind(this)
    _this.gittokenHyperlog = _index8.gittokenHyperlog.bind(_this);
    _this.logMessage = _index8.logMessage.bind(_this);
    _this.logExchange = _index8.logExchange.bind(_this);
    _this.logVote = _index8.logVote.bind(_this);
    _this.handleLogin = _index9.handleLogin.bind(_this);
    _this.verifyContributor = _index10.verifyContributor.bind(_this);
    _this.handleVerification = _index9.handleVerification.bind(_this);
    _this.handleAuthentication = _index9.handleAuthentication.bind(_this);
    _this.handleContractDetails = _index9.handleContractDetails.bind(_this);

    _this.gittokenHyperlog({});

    _this.socketHandler = _index4.socketHandler.bind(_this);
    _this.socketRouter = _index4.socketRouter.bind(_this);
    _this.socketHandler({}

    // Setup Analytics Processor
    );_this.analyticsProcessor = _index2.default.bind(_this);
    _this.configureAnalytics = _configure2.default.bind(_this);
    _this.analyticsProcessor({}

    // Bind event methods to class scope
    );_this.ping = _index9.ping.bind(_this);
    _this.push = _index9.push.bind(_this);
    _this.pullRequest = _index9.pullRequest.bind(_this);
    _this.milestone = _index9.milestone.bind(_this);
    _this.organization = _index9.organization.bind(_this);_this.getSavedContract = _index10.getSavedContract.bind(_this);
    _this.createGitTokenContract = _index10.createGitTokenContract.bind(_this);
    _this.saveContractDetails = _index10.saveContractDetails.bind(_this);
    _this.getContractDetails = _index10.getContractDetails.bind(_this);
    _this.retrieveDetails = _index5.retrieveDetails.bind(_this);
    _this.parsePushEvent = _index5.parsePushEvent.bind(_this);
    _this.parseRepositoryStats = _index5.parseRepositoryStats.bind(_this);
    _this.parseGitHubEvents = _index5.parseGitHubEvents.bind(_this);
    _this.retrieveGitHubUser = _index5.retrieveGitHubUser.bind(_this);
    _this.faucet = _index5.faucet.bind(_this);
    _this.generateReward = _index10.generateReward.bind(_this);
    _this.calculateRewardBonus = _index5.calculateRewardBonus.bind(_this);
    _this.gittokenAPI = _index7.default.bind(_this);_this.middlewareState = {
      accounts: {},
      contract: {},
      blockchain: {}
    };

    return _this;
  }

  (0, _createClass3.default)(GitTokenMiddleware, [{
    key: 'routeRequests',
    value: function routeRequests() {
      var _this2 = this;

      var router = (0, _express.Router)();

      router.post('/verify/:address', function (req, res) {
        _this2.handleVerification({
          user: req.user,
          address: req.params.address
        }).then(function (authStatus) {
          var code = authStatus.code,
              data = authStatus.data;

          res.status(code).send(data);
        }).catch(function (error) {
          console.log('/verify/:address::error', error);
          res.status(500).send(error);
        });
      });

      router.post('/', function (req, res, next) {
        var headers = req.headers,
            body = req.body;

        _bluebird2.default.resolve().then(function () {
          if (_this2.isGitHubHook) {
            // console.log('GitHub WebHook Request')
            return _this2.handleGitHubWebHookEvent({
              event: headers['x-github-event'],
              data: { headers: headers, body: body }
            });
          } else {
            throw new Error('Request not yet configured');
          }
        }).then(function (response) {
          res.status(200).send((0, _stringify2.default)(response, null, 2));
        }).catch(function (error) {
          console.log('routeRequests::error', error);
          res.status(500).send(error.message);
        });
      });

      router.post('/faucet/:address', function (req, res, next) {
        if (!_this2.faucetActive) {
          res.status(500).send((0, _stringify2.default)({
            message: 'Faucet is not active! Set { faucetActive: true } to enable'
          }, null, 2));
        } else {
          var from = void 0;
          _this2.importKeystore({}).then(function (_ks) {
            from = '0x' + _this2.ks.getAddresses()[0];
            return _this2.eth.getBalanceAsync(from);
          }).then(function (balance) {
            console.log('Balance of ' + from + '::balance', balance);
            if (balance.toNumber() > 2e16) {
              return _this2.signTransaction({
                to: '0x' + req.params.address,
                from: from,
                value: 2e16,
                gasLimit: 4e6,
                data: null
              });
            } else {
              res.status(500).send((0, _stringify2.default)({
                message: 'Faucet does not have enough funds! Send funds to ' + from,
                balance: balance
              }, null, 2));
            }
          }).then(function (signedTx) {
            // console.log('`0x${signedTx}`', `0x${signedTx}`)
            return _this2.eth.sendRawTransactionAsync('0x' + signedTx);
          }).then(function (txHash) {
            // console.log('txHash', txHash)
            return _this2.getTransactionReceipt(txHash);
          }).then(function (txReceipt) {
            // console.log('txReceipt', txReceipt)
            res.status(200).send(txReceipt);
          }).catch(function (error) {
            res.status(500).send(error);
          });
        }
      });

      router.use('/api/v1', this.gittokenAPI);

      return router;
    }
  }, {
    key: 'handleGitHubWebHookEvent',
    value: function handleGitHubWebHookEvent(_ref) {
      var _this3 = this;

      var event = _ref.event,
          data = _ref.data;

      return new _bluebird2.default(function (resolve, reject) {
        // console.log('handleGitHubWebHookEvent::event', event)
        // console.log('handleGitHubWebHookEvent::data', data)

        switch (event) {
          case 'ping':
            resolve(_this3.ping({ event: event, data: data }));
            break;
          case 'milestone':
            resolve(_this3.milestone({ event: event, data: data }));
            break;
          case 'organization':
            resolve(_this3.organization({ event: event, data: data }));
            break;
          default:
            resolve(_this3.generateReward({
              rewardType: event,
              deliveryID: data['headers']['x-github-delivery'],
              contributorUsername: data['body']['sender']['login'],
              rewardBonus: 0,
              reservedType: ''
            })
            // let error = new Error('Invalid Event Found')
            // reject(error)
            );}
      });
    }
  }]);
  return GitTokenMiddleware;
}(_KeystoreGenerator3.default);

exports.default = GitTokenMiddleware;